/*
 * Copyright 2020 ES4X
 *
 * ES4X licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

import { Handler, AsyncResult } from '@vertx/core';

import { Promise } from '@vertx/core';
import { Future } from '@vertx/core';
import { BridgeEventType } from './enums';

/**
 * Represents an event that occurs on the event bus bridge.
 * <p>
 * Please consult the documentation for a full explanation.
 */
export abstract class BaseBridgeEvent extends Promise<boolean> {
  complete(arg0?: boolean) : void;

  tryComplete(arg0?: boolean) : boolean;

  future() : Future<boolean>;

  /**
   */
  type() : BridgeEventType;

  /**
   * Get the raw JSON message for the event. This will be null for SOCKET_CREATED or SOCKET_CLOSED events as there is
   * no message involved. If the returned message is modified, {@link BaseBridgeEvent#setRawMessage} should be called with the
   * new message.
   */
  getRawMessage() : { [key: string]: any };

  /**
   * Get the raw JSON message for the event. This will be null for SOCKET_CREATED or SOCKET_CLOSED events as there is
   * no message involved.
   */
  setRawMessage(message: { [key: string]: any }) : BaseBridgeEvent;
}

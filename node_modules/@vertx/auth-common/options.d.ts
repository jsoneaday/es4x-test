/*
 * Copyright 2020 ES4X
 *
 * ES4X licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

/**
 * A common base object for authentication options.<p>
 */
export abstract class AuthOptions {

  constructor();
  constructor(obj: AuthOptions);
}

/**
 * Options describing how an JWT KeyStore should behave.
 */
export class KeyStoreOptions {

  constructor();
  constructor(obj: KeyStoreOptions);
  getPassword(): string;

  setPassword(password: string): KeyStoreOptions;

  getPath(): string;

  setPath(path: string): KeyStoreOptions;

  getType(): string;

  setType(type: string): KeyStoreOptions;
}

/**
 * Options describing how a Cryptographic Key.
 */
export class PubSecKeyOptions {

  constructor();
  constructor(obj: PubSecKeyOptions);
  getAlgorithm(): string;

  setAlgorithm(algorithm: string): PubSecKeyOptions;

  isCertificate(): boolean;

  setCertificate(certificate: boolean): PubSecKeyOptions;

  getPublicKey(): string;

  setPublicKey(publicKey: string): PubSecKeyOptions;

  getSecretKey(): string;

  setSecretKey(secretKey: string): PubSecKeyOptions;

  isSymmetric(): boolean;

  setSymmetric(symmetric: boolean): PubSecKeyOptions;
}

/**
 * Options describing a secret.
 */
export class SecretOptions {

  constructor();
  constructor(obj: SecretOptions);
  getSecret(): string;

  setSecret(secret: string): SecretOptions;

  getType(): string;

  setType(type: string): SecretOptions;
}

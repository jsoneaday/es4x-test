/*
 * Copyright 2020 ES4X
 *
 * ES4X licenses this file to you under the Apache License, version 2.0
 * (the "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

/**
 * Configures a reporter consisting in a name <code>to</code>, an address <code>at</code> and an optional <code>format</code>.
 */
export class ReportOptions {

  constructor();
  constructor(obj: ReportOptions);
  /**
   * Set the current reporter format.
   */
  getFormat(): string;

  /**
   * Set the current reporter format.
   */
  setFormat(format: string): ReportOptions;

  /**
   * Set the current reporter name.
   */
  getTo(): string;

  /**
   * Set the current reporter name.
   */
  setTo(to: string): ReportOptions;
}

/**
 * Reporting options:
 *
 * <ul>
 *   <li>the <code>reporters</code> is an array of reporter configurations</li>
 * </ul>
 */
export class ReportingOptions {

  constructor();
  constructor(obj: ReportingOptions);
  /**
   * Replace the current list of reporters with a new one.
   */
  getReporters(): ReportOptions;

  /**
   * Replace the current list of reporters with a new one.
   */
  setReporters(reporters: ReportOptions): ReportingOptions;

  /**
   * Replace the current list of reporters with a new one.
   */
  addReporter(reporters: ReportOptions): ReportingOptions;
}

/**
 * Test execution options:
 *
 * <ul>
 *   <li>the <code>timeout</code> in milliseconds, the default value is 2 minutes </li>
 *   <li>the <code>useEventLoop</code></li> configures the event loop usage
 *     <ul>
 *       <li><code>true</code> always runs with an event loop</li>
 *       <li><code>false</code> never runs with an event loop</li>
 *       <li><code>null</code> uses an event loop if there is one (provided by {@link Vertx#currentContext})
 *       otherwise run without</li>
 *     </ul>
 *   </li>
 *   <li>the <code>reporters</code> is an array of reporter configurations</li>
 * </ul>
 */
export class TestOptions {

  constructor();
  constructor(obj: TestOptions);
  /**
   * Replace the current list of reporters with a new one.
   */
  getReporters(): ReportOptions;

  /**
   * Replace the current list of reporters with a new one.
   */
  setReporters(reporters: ReportOptions): TestOptions;

  /**
   * Replace the current list of reporters with a new one.
   */
  addReporter(reporters: ReportOptions): TestOptions;

  /**
   * Set the test timeout.
   */
  getTimeout(): number;

  /**
   * Set the test timeout.
   */
  setTimeout(timeout: number): TestOptions;

  /**
   * Configure the execution to use an event loop when there is no one existing.
   */
  isUseEventLoop(): boolean;

  /**
   * Configure the execution to use an event loop when there is no one existing.
   */
  setUseEventLoop(useEventLoop: boolean): TestOptions;
}
